
/**
 * 统计图
 * @param  string thm_title 主标题
 * @param  number title_x   标题相对位置
 * @param  string sub_title 副标题
 * @param  number  sub_x     副标题相对位置
 * @param  array x_cat      x轴栏目名称
 * @param  string y_cat     y轴栏说明
 * @param  array res      生成统计图所需的数据
 * @param  string id        放置图片的容器id
 * @param  string drowtype   图的类型
 */
function PaiTing(thm_title,title_x,sub_title,sub_x,x_cat,y_cat,res,id,drowtype){
	var chart;
    chart = new Highcharts.Chart({ 
        chart: {  //整体控制
            renderTo: id,  //图表容器的DIVbar:横向条形图
            defaultSeriesType: drowtype, //可选，默认为line【line:折线;spline:平滑的线;area:区域图;bar:曲线图;pie:饼图;scatter:点状图;column:柱状图等等;
            marginRight: 130, //外边距控制 (上下左右空隙)
            marginBottom: 25  //外边距控制
        }, 
        title: { 
            text: thm_title, //主标题
            x: title_x           //标题相对位置  默认居中
        },

        plotOptions: {//设置线上各点显示数据
            line: {
                dataLabels: {
                    enabled: true
                },
            },
            column:{
                dataLabels:{
                    enabled:true //是否显示数据标签
                }
            },
            area:{
                dataLabels:{
                    enabled:true //是否显示数据标签
                }
            }
        },
        subtitle: {
        text: sub_title,//副标题
        x: sub_x           //标题相对位置 60
        },
        xAxis: {          //x轴数据
            categories: x_cat
        }, 
        yAxis: {          //y轴数据
            title: { 
                text: y_cat 
            }, 
            plotLines: [{  //标线
                value: 0, 
                width: 1, 
                color: '#808080' 
            }] 
        },
        tooltip: {
            valueSuffix: ''
        }, 
        // tooltip: {        //数据点的提示框
        //     valueSuffix: '%',
        //     formatter: function () { 
        //         return '<b>' + this.series.name + '</b><br/>' + this.x + ': ' + this.y; 
        //     }  //formatter需要一个回调函数，可以通过this关键字打点得到当前一些图表信息
        // }, 
        legend: { 
            layout: 'vertical', 
            align: 'right', 
            verticalAlign: 'top', 
            x: -10, 
            y: 100, 
            borderWidth: 0 
        }, 
       
        series:res 
    }); 
}

function totalpaiting(data,pictype,station){
    $.ajax({
        type : "POST",
        url : '/station/paitingdata',
        data : data,
        success : function(res) {
            PaiTing(station+'用户连接走势',-20,'',60,res.connect.x_cat,'连接数量',res.connect.y_data,'connect',pictype); 
            PaiTing(station+'用户注册走势',-20,'',60,res.reg.x_cat,'注册数量',res.reg.y_data,'reg',pictype);
            PaiTing(station+'用户下载走势',-20,'',60,res.down.x_cat,'下载数量',res.down.y_data,'down',pictype);
            PaiTing(station+'转化率走势',-20,'',60,res.rate.x_cat,'转化率(%)',res.rate.y_data,'rate',pictype); 
            PaiTing(station+res.rose.date+'流程步骤流失率',-20,'',60,res.rose.x_cat,'流失率(%)',res.rose.y_data,'rose','column');  
            PaiTing(station+res.rose.date+'流程数据概况',-20,'',60,res.prose.x_cat,'数量',res.prose.y_data,'prose',pictype);  
        }
    },'json');
}

//细分统计图
function graph(data,station,msg,pictype,xtitle){
     $.ajax({
        type : "POST",
        url : '/station/paitingdata',
        data : data,
        success : function(res) {
            PaiTing(station+msg,-20,'',60,res.x_cat,xtitle,res.y_data,'container',pictype);  
        }
    },'json');
}

//车站
function stations(stationid){
    var stations = ['','青岛南','青岛北','济南','济南西','曲阜'];
    return stations[stationid];
}



